#!/bin/bash

# Script to switch to Irancell modem configuration

# Check if interface name is provided
if [ -z "$1" ]; then
  echo "Usage: $0 <INTERFACE_NAME>"
  exit 1
fi

INTERFACE_NAME="$1"
IP_ADDRESS="192.168.1.101" # Different IP for Irancell
NETMASK="255.255.255.0"    # or /24
GATEWAY="192.168.1.2"      # Different Gateway for Irancell
DNS_SERVER="8.8.4.4"       # Different DNS for Irancell

echo "Attempting to switch to Irancell modem (Gateway: ${GATEWAY}) for interface ${INTERFACE_NAME}..."

# Check if NetworkManager is available
if command -v nmcli &> /dev/null; then
    echo "Using NetworkManager (nmcli) to configure interface..."

    # Get the connection name associated with the interface.
    CONNECTION_NAME=$(nmcli -g NAME,DEVICE,STATE con show --active | grep "${INTERFACE_NAME}:activated" | awk -F: '{print $1}' | head -n 1)

    if [ -z "$CONNECTION_NAME" ]; then
        CONNECTION_NAME=$(nmcli -g NAME,DEVICE con show | grep "${INTERFACE_NAME}" | awk -F: '{print $1}' | head -n 1)
    fi

    if [ -z "$CONNECTION_NAME" ]; then
        echo "Error: Could not find an existing NetworkManager connection for interface ${INTERFACE_NAME}."
        echo "Please ensure the interface has a connection profile in NetworkManager."
        exit 1
    fi

    echo "Found NetworkManager connection: ${CONNECTION_NAME}"

    # Configure IP address, gateway, and DNS
    nmcli con mod "${CONNECTION_NAME}" ipv4.method manual ipv4.addresses "${IP_ADDRESS}/24" ipv4.gateway "${GATEWAY}" ipv4.dns "${DNS_SERVER}"

    # Bring the connection down and up to apply changes
    echo "Applying changes by reactivating connection '${CONNECTION_NAME}'..."
    nmcli con down "${CONNECTION_NAME}" && nmcli con up "${CONNECTION_NAME}"

    if [ $? -eq 0 ]; then
        echo "Successfully switched to Irancell modem configuration for interface ${INTERFACE_NAME} using NetworkManager."
        echo "IP: ${IP_ADDRESS}/24, Gateway: ${GATEWAY}, DNS: ${DNS_SERVER}"
    else
        echo "Error: Failed to apply Irancell modem configuration using NetworkManager."
        exit 1
    fi
elif command -v ip &> /dev/null; then
    echo "Using 'ip' command to configure interface (NetworkManager not found)..."
    echo "Note: 'ip' command changes may not persist across reboots or NetworkManager taking control."

    # Set IP address and subnet mask
    ip addr flush dev "${INTERFACE_NAME}" # Remove old IP addresses
    ip addr add "${IP_ADDRESS}/24" dev "${INTERFACE_NAME}"

    # Set default gateway
    ip route del default
    ip route add default via "${GATEWAY}" dev "${INTERFACE_NAME}"

    echo "DNS Configuration: Please ensure /etc/resolv.conf is configured correctly."
    echo "You might need to manually edit it or configure your system's DNS resolver."
    echo "For example, add 'nameserver ${DNS_SERVER}' to /etc/resolv.conf."
    if [ -f /etc/resolv.conf ] && grep -q "Generated by NetworkManager" /etc/resolv.conf; then
        echo "Warning: /etc/resolv.conf seems to be managed by NetworkManager. Manual DNS changes might be overwritten."
    fi

    echo "Successfully switched to Irancell modem configuration for interface ${INTERFACE_NAME} using 'ip' commands."
    echo "IP: ${IP_ADDRESS}/24, Gateway: ${GATEWAY}"
    echo "DNS: Remember to set DNS to ${DNS_SERVER} if not handled by other means."
else
    echo "Error: Neither 'nmcli' nor 'ip' command found. Cannot configure network."
    exit 1
fi

echo "Script finished."
